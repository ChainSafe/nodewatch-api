type AggregateData {
  name: String!
  count: Int!
}

type NextHardforkAggregation {
  version: String!
  epoch: String!
  count: Int!
}

type ClientVersionAggregation {
  client: String!
  count: Int!
  versions: [AggregateData!]!
}

type NodeStats {
  totalNodes: Int!
  nodeSyncedPercentage: Float!
  nodeUnsyncedPercentage: Float!
}

type NodeStatsOverTime {
  time: Float!
  totalNodes: Int!
  syncedNodes: Int!
  unsyncedNodes: Int!
}

type RegionalStats {
  totalParticipatingCountries: Int!
  hostedNodePercentage: Float!
  nonhostedNodePercentage: Float!
}

type HeatmapData {
  networkType: String!
	clientType:  String!
	syncStatus:  String!
	latitude:    Float!
	longitude:   Float!
  city:        String!
  country:     String!
}

input PeerFilter {
  forkDigest: String
}

type Query {
  aggregateByAgentName: [AggregateData!]!
  aggregateByCountry: [AggregateData!]!
  aggregateByOperatingSystem: [AggregateData!]!
  aggregateByNetwork: [AggregateData!]!
  aggregateByHardforkSchedule(peerFilter: PeerFilter): [NextHardforkAggregation!]!
  aggregateByClientVersion: [ClientVersionAggregation!]!
  getHeatmapData(peerFilter: PeerFilter): [HeatmapData!]!
  getNodeStats: NodeStats!
  getNodeStatsOverTime(start: Float!, end: Float!): [NodeStatsOverTime!]!
  getRegionalStats: RegionalStats!
  getAltairUpgradePercentage: Float!
}